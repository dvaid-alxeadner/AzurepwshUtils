{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "namespace_name": {
            "type": "string"
        },
        "privateEndpointName": {
            "type": "string"
        },
        "targetSubResource": {
            "type": "array"
        },
        "subnet": {
            "type": "string"
        },
        "environment_tag":
        {
            "type": "string"
        },
        "oi_tag":
        {
            "type": "string"
        },
        "utcShortValue": {
            "type": "string",
            "defaultValue": "[utcNow('d')]"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.EventHub/namespaces",
            "apiVersion": "2022-01-01-preview",
            "name": "[parameters('namespace_name')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "AMBIENTE": "[parameters('environment_tag')]",
                "OI": "[parameters('oi_tag')]"
            },
            "sku": {
                "name": "Standard",
                "tier": "Standard",
                "capacity": 1
            },
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "minimumTlsVersion": "1.2",
                "publicNetworkAccess": "Disabled",
                "disableLocalAuth": true,
                "zoneRedundant": false,
                "isAutoInflateEnabled": false,
                "maximumThroughputUnits": 0,
                "kafkaEnabled": true
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces/authorizationrules",
            "apiVersion": "2022-01-01-preview",
            "name": "[concat(parameters('namespace_name'), '/RootManageSharedAccessKey')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', parameters('namespace_name'))]"
            ],
            "properties": {
                "rights": [
                    "Listen",
                    "Manage",
                    "Send"
                ]
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces/networkRuleSets",
            "apiVersion": "2022-01-01-preview",
            "name": "[concat(parameters('namespace_name'), '/default')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', parameters('namespace_name'))]"
            ],
            "properties": {
                "publicNetworkAccess": "Disabled",
                "defaultAction": "Deny",
                "virtualNetworkRules": [],
                "ipRules": []
            }
        },
        {
            "location": "[resourceGroup().location]",
            "name": "[parameters('privateEndpointName')]",
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2021-05-01",
            "properties": {
                "subnet": {
                    "id": "[parameters('subnet')]"
                },
                "customNetworkInterfaceName":  "[concat(parameters('privateEndpointName'),'-nic')]",
                "privateLinkServiceConnections": [
                    {
                        "name": "[parameters('privateEndpointName')]",
                        "properties": {
                            "privateLinkServiceId": "[concat('/subscriptions/',subscription().subscriptionId,'/resourcegroups/',resourceGroup().name,'/providers/Microsoft.EventHub/namespaces/',parameters('namespace_name'))]",
                            "groupIds": "[parameters('targetSubResource')]"
                        }
                    }
                ]
            },
            "tags": {
                "AMBIENTE": "[parameters('environment_tag')]",
                "OI": "[parameters('oi_tag')]"
            },
            "dependsOn": ["[concat('Microsoft.EventHub/namespaces/', parameters('namespace_name'))]"]
        }
    ]
}